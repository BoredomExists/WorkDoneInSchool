// Generated by view binder compiler. Do not edit!
package com.example.chapter9practiceactivity.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chapter9practiceactivity.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentItemDetailBinding implements ViewBinding {
  @NonNull
  private final WebView rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final AppBarLayout appBar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final Toolbar detailToolbar;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final FloatingActionButton fab;

  @NonNull
  public final TextView itemDetail;

  @NonNull
  public final WebView itemDetailContainer;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final NestedScrollView itemDetailScrollView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp/</li>
   * </ul>
   */
  @Nullable
  public final CollapsingToolbarLayout toolbarLayout;

  private FragmentItemDetailBinding(@NonNull WebView rootView, @Nullable AppBarLayout appBar,
      @Nullable Toolbar detailToolbar, @Nullable FloatingActionButton fab,
      @NonNull TextView itemDetail, @NonNull WebView itemDetailContainer,
      @Nullable NestedScrollView itemDetailScrollView,
      @Nullable CollapsingToolbarLayout toolbarLayout) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.detailToolbar = detailToolbar;
    this.fab = fab;
    this.itemDetail = itemDetail;
    this.itemDetailContainer = itemDetailContainer;
    this.itemDetailScrollView = itemDetailScrollView;
    this.toolbarLayout = toolbarLayout;
  }

  @Override
  @NonNull
  public WebView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentItemDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentItemDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_item_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentItemDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.detail_toolbar;
      Toolbar detailToolbar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);

      id = R.id.item_detail;
      TextView itemDetail = ViewBindings.findChildViewById(rootView, id);
      if (itemDetail == null) {
        break missingId;
      }

      WebView itemDetailContainer = (WebView) rootView;

      id = R.id.item_detail_scroll_view;
      NestedScrollView itemDetailScrollView = ViewBindings.findChildViewById(rootView, id);

      id = R.id.toolbar_layout;
      CollapsingToolbarLayout toolbarLayout = ViewBindings.findChildViewById(rootView, id);

      return new FragmentItemDetailBinding((WebView) rootView, appBar, detailToolbar, fab,
          itemDetail, itemDetailContainer, itemDetailScrollView, toolbarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
